comment: Setup a product Tour
â†“InstallIntroJS [ngx.components.UICustomAction-1729613778235]: 
  actionValue: 
    - xmlizable: 
      - â†‘classname: com.twinsoft.convertigo.beans.common.FormatedContent
      - com.twinsoft.convertigo.beans.common.FormatedContent: 
        â†’: |
          '			page.c8o.log.debug(''[MB] ''+ props.actionFunction +'': ''+ props.actionName);
          
          			let router = page.getInstance(Router) as Router;
          			let RunTour = (url, data) => {
          				let options = {
          					steps: []
          				}
          				
          				Object.keys(data).forEach((key) => {
          					if (key !== ''steps'') {
          						options[key] = data[key];
          					}
          				});
          	
          				// format the steps for introJs by adding the element to the selector
          				setTimeout(() => {
          					data.steps.forEach((step) => {
          						// if the element is a string, convert it to a DOM element
          						if (typeof step.element === ''string'') {
          							step.element = document.querySelector(step.element);
          							// Attach a click event to the element to trigger the next step
          							if (step.element)
          								step.element.addEventListener(''click'', () => {
          									introJs().nextStep();
          								});
          						}
          						options.steps.push(step);
          					});
          
          					// find the first step number of the given url
          					let stepNumber = 1;
          					for (let i = 0; i < options.steps.length; i++) {
          						if (options.steps[i].url === url) {
          							stepNumber = i;
          							break;
          						}
          					}
          					// start the tour at the first step of the given url					
          					let tour = introJs().setOptions(options)
          					tour.goToStep(stepNumber);
          					tour.start();
          					resolve();
          				}, 100);
          			}
          
          			fetch(vars.StepsPath)
          				.then((response) => {
          					return response.json();
          				})
          				.then((data) => {
          					RunTour(router.url, data); // run the tour on the root page
          					router.events
          						.pipe(filter(event => event instanceof NavigationEnd))
          						.subscribe((event: NavigationEnd) => {
          							page.c8o.log.debug(''[ProductTour] ''+ ''Navigated to page: ''+ event.url);
          							RunTour(event.url, data); // run the tour each time the page changes
          						});
          				})
          				.catch((error) => {
          					console.error(''Error:'', error);
          				});
          '
  build_scripts: 
    - xmlizable: 
      - â†‘classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - â†‘classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - â†‘value: node_modules/intro.js/intro.js
  build_styles: 
    - xmlizable: 
      - â†‘classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - â†‘classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - â†‘value: node_modules/intro.js/introjs.css
        - xmlizable: 
          - â†‘classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - â†‘value: ../../DisplayObjects/mobile/assets/introjs-custom.css
  package_dependencies: 
    - xmlizable: 
      - â†‘classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - â†‘classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - â†‘value: intro.js
            - java.lang.String: 
              - â†‘value: 7.2.0
  page_ts_imports: 
    - xmlizable: 
      - â†‘classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - â†‘classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - â†‘value: Router, NavigationEnd
            - java.lang.String: 
              - â†‘value: '@angular/router'
        - xmlizable: 
          - â†‘classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - â†‘value: filter
            - java.lang.String: 
              - â†‘value: rxjs/operators
        - xmlizable: 
          - â†‘classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - â†‘value: '* as introJs'
            - java.lang.String: 
              - â†‘value: intro.js/intro.js
â†“StepsPath [ngx.components.UIStackVariable-1729614223541]: 
  comment: |
    'Path to a json files  defining all the Steps of your product tour. Please see intro.js configuration for more information about setting up the steps.
    [Intro.js steps](https://introjs.com/docs/tour/examples/json-config)
    
    Here is an example of a Tour steps 
    
    
    ```
    [
      {
        title: ''Welcome'',
        intro: ''Hello World! ðŸ‘‹''
      },
      {
        element: document.querySelector(''.card-demo''),
        intro: ''This step focuses on an image''
      },
      {
        title: ''Farewell!'',
        element: document.querySelector(''.card__image''),
        intro: ''And this is our final step!''
      }
    ]
    ```
    '
  value: '''assets/intro.json'''